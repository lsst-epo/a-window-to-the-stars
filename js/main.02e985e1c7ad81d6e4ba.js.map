{"version":3,"sources":["webpack:///./src/assets/stylesheets/styles.scss","webpack:///./src/components/scatter-plot/Point.jsx","webpack:///./src/components/scatter-plot/Tooltip.jsx","webpack:///./src/components/scatter-plot/index.jsx","webpack:///./src/components/histogram/index.jsx","webpack:///./src/App.jsx","webpack:///./src/index.jsx"],"names":["module","exports","header-primary","headerPrimary","nav-primary","navPrimary","data-point","dataPoint","tooltip","stuff","Point","React","PureComponent","constructor","props","super","this","el","createRef","componentDidUpdate","_this$props","selected","hovered","$point","d3","current","selectStyle","hoverStyle","defaultStyle","transition","duration","attr","render","react_default","a","createElement","className","x","y","rx","height","width","strokeWidth","transform","fill","stroke","ref","jsx_default","Tooltip","state","pointData","visible","show","posX","posY","_this$state","pointDataState","$tooltip","showUpdate","moveUpdate","hide","style","on","setState","prevState","objectSpread_default","opacity","_ref","teff","_ref2","_ref3","luminosity","_ref4","baselineShift","ScatterPlot","Component","mouseoverHandler","d","hoverPointData","toolTipPosX","pageX","toolTipPosY","pageY","showTooltip","mouseoutHandler","selectedPointData","id","clickHandler","selectedPointId","svgEl","xAxisContainer","yAxisContainer","componentDidMount","createScatterPlot","updateScatterPlot","updatePoints","$selection","data","xScale","yScale","xValueAccessor","yValueAccessor","selectAll","concat","ease","addEventListeners","$scatterplot","$allPoints","target","classList","createXAxis","xAxis","call","createYAxis","yAxis","ticks","points","map","i","key","scatter_plot_Point","tabIndex","stylePoints","_this$props2","_this$props3","padding","domain","range","_this$state2","_this$props4","xAxisLabel","yAxisLabel","position","top","left","scatter_plot_ref","scatter_plot_ref2","scatter_plot_ref3","scatter_plot_ref4","_ref5","_ref6","scatter_plot_Tooltip","textAnchor","_ref7","Histogram","histogramData","updateHistogram","updateRects","x0","bandwidth","length","updateXAxis","tickFormat","updateYAxis","valueAccessor","value","thresholds","reduce","result","push","bars","react_router_dom","to","hot","App_ref","react_router","exact","path","routeProps","scatter_plot","extends_default","window","innerWidth","innerHeight","stars","histogram","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"js/main.02e985e1c7ad81d6e4ba.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-primary\":\"header-primary\",\"headerPrimary\":\"header-primary\",\"nav-primary\":\"nav-primary\",\"navPrimary\":\"nav-primary\",\"data-point\":\"data-point\",\"dataPoint\":\"data-point\",\"tooltip\":\"tooltip\",\"stuff\":\"stuff\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nclass Point extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.el = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const { selected, hovered } = this.props;\n    const $point = d3.select(this.el.current);\n\n    if (selected) {\n      this.selectStyle($point);\n    } else if (hovered) {\n      this.hoverStyle($point);\n    } else {\n      this.defaultStyle($point);\n    }\n  }\n\n  defaultStyle($point) {\n    $point\n      .transition()\n      .duration(200)\n      .attr('fill', 'yellow');\n  }\n\n  selectStyle($point) {\n    $point\n      .transition()\n      .duration(200)\n      .attr('fill', 'lightsteelblue');\n  }\n\n  hoverStyle($point) {\n    $point\n      .transition()\n      .duration(200)\n      .attr('fill', 'red');\n  }\n\n  render() {\n    return (\n      <rect\n        className=\"data-point\"\n        x={0}\n        y={0}\n        rx={0}\n        height={0}\n        width={0}\n        strokeWidth={1}\n        transform=\"translate(-6, -6)\"\n        fill=\"transparent\"\n        stroke=\"transparent\"\n        ref={this.el}\n      />\n    );\n  }\n}\n\nPoint.propTypes = {\n  selected: PropTypes.bool,\n  hovered: PropTypes.bool,\n};\n\nexport default Point;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nclass Tooltip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pointData: props.pointData,\n      visible: props.show,\n    };\n\n    this.el = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const { pointData, posX, posY, show } = this.props;\n    const { visible, pointData: pointDataState } = this.state;\n\n    const $tooltip = d3.select(this.el.current);\n\n    if (show && !visible) {\n      this.showUpdate($tooltip, pointData, posX, posY, show);\n    } else if (show && visible && pointData !== pointDataState) {\n      this.moveUpdate($tooltip, pointData, posX, posY, show);\n    } else if (!show) {\n      this.hide($tooltip, show);\n    }\n  }\n\n  showUpdate($tooltip, pointData, posX, posY, show) {\n    $tooltip\n      .transition()\n      .duration(10)\n      .style('left', posX + 10 + 'px')\n      .style('top', posY + 10 + 'px')\n      .on('end', () => {\n        this.setState(prevState => ({\n          ...prevState,\n          pointData,\n          visible: show,\n        }));\n      })\n      .transition('fadeIn')\n      .duration(400)\n      .style('opacity', 1);\n  }\n\n  moveUpdate($tooltip, pointData, posX, posY) {\n    $tooltip\n      .style('opacity', 1)\n      .transition()\n      .duration(400)\n      .style('left', posX + 10 + 'px')\n      .style('top', posY + 10 + 'px')\n      .on('end', () => {\n        this.setState(prevState => ({\n          ...prevState,\n          pointData,\n        }));\n      });\n  }\n\n  hide($tooltip, show) {\n    $tooltip\n      .transition()\n      .duration(400)\n      .style('opacity', 0)\n      .on('end', () => {\n        this.setState(prevState => ({\n          ...prevState,\n          visible: show,\n        }));\n      });\n  }\n\n  render() {\n    const { pointData } = this.state;\n\n    return (\n      <div ref={this.el} style={{ opacity: 0 }} className=\"tooltip\">\n        <div>\n          <span>Temperature: </span>\n          <span>{pointData ? pointData.teff : null}</span>\n          <span className=\"unit\">K</span>\n        </div>\n        <div>\n          <span>Luminosity: </span>\n          <span>{pointData ? pointData.luminosity : null}</span>\n          <sub className=\"unit\">&#8857;</sub>\n        </div>\n      </div>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  innerRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  pointData: PropTypes.object,\n  posX: PropTypes.number,\n  posY: PropTypes.number,\n  show: PropTypes.bool,\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nimport Point from './Point.jsx';\nimport Tooltip from './Tooltip.jsx';\n\nclass ScatterPlot extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedPointData: null,\n      hoverPointData: null,\n      toolTipPosX: 0,\n      toolTipPosY: 0,\n      showTooltip: false,\n    };\n\n    // refs to attach d3 events, transitions, data bindings, etc.\n    this.svgEl = React.createRef();\n    this.xAxisContainer = React.createRef();\n    this.yAxisContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    this.createScatterPlot();\n  }\n\n  componentDidUpdate() {\n    this.updateScatterPlot();\n  }\n\n  // Update data point styles and attributes\n  updatePoints($selection, data, xScale, yScale) {\n    const { xValueAccessor, yValueAccessor } = this.props;\n    const $allPoints = $selection.selectAll('rect').data(data);\n\n    $allPoints\n      .attr('key', d => {\n        return `rect-${d.id}`;\n      })\n      .attr('x', d => {\n        return xScale(d[xValueAccessor]);\n      })\n      .attr('y', d => {\n        return yScale(d[yValueAccessor]);\n      })\n      .transition()\n      .duration(1000)\n      .ease(d3.easeCircle)\n      .attr('rx', 6)\n      .attr('fill', 'yellow')\n      .attr('stroke', 'black')\n      .attr('width', 12)\n      .attr('height', 12);\n  }\n\n  // mouseover/focus handler for point\n  mouseoverHandler = d => {\n    // add hover style on point and show tooltip\n    this.setState(prevState => ({\n      ...prevState,\n      hoverPointData: d,\n      toolTipPosX: d3.event.pageX,\n      toolTipPosY: d3.event.pageY,\n      showTooltip: true,\n    }));\n  };\n\n  // mouseout/blur handler for point\n  mouseoutHandler = () => {\n    const { selectedPointData } = this.state;\n    const selectedPointId = selectedPointData ? selectedPointData.id : null;\n\n    // remove hover style on point but don't hide  tooltip\n    if (selectedPointId) {\n      this.setState(prevState => ({\n        ...prevState,\n        hoverPointData: null,\n      }));\n      // remove hover style on point and hide tooltip\n    } else {\n      this.setState(prevState => ({\n        ...prevState,\n        hoverPointData: null,\n        showTooltip: false,\n      }));\n    }\n  };\n\n  // point click handler\n  clickHandler = d => {\n    const { selectedPointData } = this.state;\n    const selectedPointId = selectedPointData ? selectedPointData.id : null;\n\n    // remove selected style on point\n    if (d.id === selectedPointId) {\n      this.setState(prevState => ({\n        ...prevState,\n        selectedPointData: null,\n        toolTipPosX: d3.event.pageX,\n        toolTipPosY: d3.event.pageY,\n      }));\n      // add selected style on point\n    } else {\n      this.setState(prevState => ({\n        ...prevState,\n        selectedPointData: d,\n        toolTipPosX: d3.event.pageX,\n        toolTipPosY: d3.event.pageY,\n        showTooltip: true,\n      }));\n    }\n  };\n\n  // add event listeners to Scatterplot and Points\n  addEventListeners($scatterplot, $allPoints) {\n    $scatterplot.on('click', () => {\n      // remove styles and selections when click on non-point\n      if (d3.event.target.classList[0] !== 'data-point') {\n        this.setState(prevState => ({\n          ...prevState,\n          selectedPointData: null,\n          hoverPointData: null,\n          showTooltip: false,\n        }));\n      }\n    });\n\n    // add event listeners to points\n    $allPoints\n      .on('mouseover focus', this.mouseoverHandler)\n      .on('mouseout blur', this.mouseoutHandler)\n      .on('click', this.clickHandler);\n  }\n\n  // create X Axis\n  createXAxis(xScale) {\n    const xAxis = d3.axisBottom(xScale);\n    d3.select(this.xAxisContainer.current).call(xAxis);\n  }\n\n  // create Y Axis\n  createYAxis(yScale) {\n    const yAxis = d3.axisLeft(yScale).ticks(8);\n    d3.select(this.yAxisContainer.current).call(yAxis);\n  }\n\n  // render Point components\n  points(data) {\n    const { selectedPointData, hoverPointData } = this.state;\n    return data.map((d, i) => {\n      const key = `$hrd-rect-${i}`;\n      return (\n        <Point\n          key={key}\n          data={d}\n          selected={d === selectedPointData}\n          hovered={d === hoverPointData}\n          tabIndex=\"0\"\n        />\n      );\n    });\n  }\n\n  // add attributes to points\n  stylePoints($allPoints, data, xScale, yScale) {\n    const { xValueAccessor, yValueAccessor } = this.props;\n\n    $allPoints\n      .attr('key', d => {\n        return `rect-${d.id}`;\n      })\n      .attr('x', d => {\n        return xScale(d[xValueAccessor]);\n      })\n      .attr('y', d => {\n        return yScale(d[yValueAccessor]);\n      })\n      .transition()\n      .duration(1000)\n      .ease(d3.easeCircle)\n      .attr('rx', 6)\n      .attr('fill', 'yellow')\n      .attr('stroke', 'black')\n      .attr('width', 12)\n      .attr('height', 12);\n  }\n\n  // bind data to elements and add styles and attributes\n  createScatterPlot() {\n    const { width, height, padding, data } = this.props;\n    const $scatterplot = d3.select(this.svgEl.current);\n    const $allPoints = d3\n      .select(this.svgEl.current)\n      .selectAll('rect')\n      .data(data);\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([10000, 3000])\n      .range([padding, width - padding]);\n\n    const yScale = d3\n      .scaleLog()\n      .domain([0.001, 100000])\n      .range([height - padding, padding]);\n\n    this.stylePoints($allPoints, data, xScale, yScale);\n    this.createXAxis(xScale);\n    this.createYAxis(yScale);\n    this.addEventListeners($scatterplot, $allPoints);\n  }\n\n  // re-bind data to elements\n  updateScatterPlot() {\n    const { data } = this.props;\n\n    d3.select(this.svgEl.current)\n      .selectAll('rect')\n      .data(data);\n  }\n\n  render() {\n    const {\n      selectedPointData,\n      hoverPointData,\n      toolTipPosX,\n      toolTipPosY,\n      showTooltip,\n    } = this.state;\n    const { data, width, height, padding, xAxisLabel, yAxisLabel } = this.props;\n\n    return (\n      <div>\n        {selectedPointData && (\n          <div style={{ position: 'relative' }}>\n            <div style={{ position: 'absolute', top: '100px', left: '100px' }}>\n              <h2>Selected Star</h2>\n              <div>\n                <span>ID: </span>\n                <span>{selectedPointData.id}</span>\n              </div>\n              <div>\n                <span>Temperature: </span>\n                <span>{selectedPointData.teff}</span>\n                <span> K</span>\n              </div>\n              <div>\n                <span>Luminosity: </span>\n                <span>{selectedPointData.luminosity}</span>\n                <sub className=\"unit\">&#8857;</sub>\n              </div>\n            </div>\n          </div>\n        )}\n        <Tooltip\n          key=\"tooltip\"\n          pointData={selectedPointData || hoverPointData}\n          posX={toolTipPosX}\n          posY={toolTipPosY}\n          show={showTooltip}\n        />\n        <svg\n          key=\"scatter-plot\"\n          className=\"scatter-plot-container\"\n          width={width}\n          height={height}\n          ref={this.svgEl}\n        >\n          <g className=\"rects\">{this.points(data)}</g>\n          <g\n            className=\"x-axis axis\"\n            transform={`translate(0, ${height - padding})`}\n            ref={this.xAxisContainer}\n          />\n          <text\n            className=\"x-axis-label\"\n            transform={`translate(${width / 2}, ${height - padding / 3})`}\n            style={{ textAnchor: 'middle' }}\n          >\n            {xAxisLabel}\n          </text>\n          <g\n            className=\"y-axis axis\"\n            transform={`translate(${padding}, 0)`}\n            ref={this.yAxisContainer}\n          />\n          <text\n            className=\"y-axis-label\"\n            transform={`translate(${padding / 3}, ${height / 2}) rotate(-90)`}\n            style={{ textAnchor: 'middle' }}\n          >\n            {yAxisLabel}\n            <tspan baselineShift=\"sub\">&#x2299;</tspan>\n          </text>\n        </svg>\n      </div>\n    );\n  }\n}\n\nScatterPlot.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  padding: PropTypes.number,\n  xAxisLabel: PropTypes.string,\n  yAxisLabel: PropTypes.string,\n  data: PropTypes.any,\n  xValueAccessor: PropTypes.string,\n  yValueAccessor: PropTypes.string,\n};\n\nexport default ScatterPlot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nclass Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      histogramData: this.histogramData(),\n    };\n\n    this.svgEl = React.createRef();\n    this.xAxisContainer = React.createRef();\n    this.yAxisContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    this.updateHistogram();\n  }\n\n  componentDidUpdate() {\n    this.updateHistogram();\n  }\n\n  // Update data point styles and attributes\n  updateRects($selection, data, xScale, yScale) {\n    $selection\n      .selectAll('rect')\n      .data(data)\n      .attr('x', d => {\n        return xScale(d.x0) + 1;\n      })\n      .attr('y', () => {\n        return yScale(0);\n      })\n      .attr('width', xScale.bandwidth())\n      .transition()\n      .duration(1000)\n      .ease(d3.easeCircle)\n      .attr('fill', 'yellow')\n      .attr('stroke', 'black')\n      .attr('y', d => {\n        return yScale(d.length);\n      })\n      .attr('height', d => {\n        return yScale(0) - yScale(d.length);\n      });\n  }\n\n  // Update X Axis\n  updateXAxis(xScale) {\n    const xAxis = d3.axisBottom(xScale).tickFormat(d3.format('.1f'));\n    d3.select(this.xAxisContainer.current).call(xAxis);\n  }\n\n  // Update Y Axis\n  updateYAxis(yScale) {\n    const yAxis = d3.axisLeft(yScale);\n\n    d3.select(this.yAxisContainer.current).call(yAxis);\n  }\n\n  histogramData() {\n    const { data, valueAccessor } = this.props;\n\n    return d3\n      .histogram()\n      .value(d => {\n        return d[valueAccessor]; // eslint-disable-line dot-notation\n      })\n      .thresholds(d3.thresholdFreedmanDiaconis)(data)\n      .reduce((result, d) => {\n        if (d.length !== 0) {\n          result.push(d);\n        }\n        return result;\n      }, []);\n  }\n\n  updateHistogram() {\n    const { width, height, padding } = this.props;\n    const { histogramData } = this.state;\n    const $selection = d3.select(this.svgEl.current);\n\n    // const xScale = d3\n    //   .scaleLinear()\n    //   .domain(\n    //     d3.extent(data, d => {\n    //       return d[valueAccessor]; // eslint-disable-line dot-notation\n    //     }),\n    //   )\n    //   .range([padding, width - padding]);\n    // const reduced = histogramData.reduce((result, d) => {\n    //     // console.log(d.length);\n    //   if (d.length !== 0) {\n    //     result.push(d.x1);\n    //   }\n    //   return result;\n    // }, []);\n    // console.log(reduced);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(\n        histogramData.map(d => {\n          return d.x0;\n        })\n      )\n      .range([padding, width - padding]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(histogramData, d => {\n          return d.length;\n        }),\n      ])\n      .range([height - padding, padding]);\n\n    this.updateRects($selection, histogramData, xScale, yScale);\n    this.updateXAxis(xScale);\n    this.updateYAxis(yScale);\n  }\n\n  bars(data) {\n    const { valueAccessor } = this.props;\n\n    return data.map((d, i) => {\n      const key = `${valueAccessor}-rect-${i}`;\n      return (\n        <rect\n          className=\"rect\"\n          key={key}\n          x={0}\n          y={0}\n          height={0}\n          width={0}\n          strokeWidth={1}\n          fill=\"transparent\"\n          stroke=\"transparent\"\n        />\n      );\n    });\n  }\n\n  render() {\n    const { width, height, padding, xAxisLabel, yAxisLabel } = this.props;\n    const { histogramData } = this.state;\n\n    return (\n      <div>\n        <svg\n          className=\"histogram-container\"\n          width={width}\n          height={height}\n          ref={this.svgEl}\n        >\n          <g className=\"bars\">{this.bars(histogramData)}</g>\n          <g\n            className=\"x-axis axis\"\n            transform={`translate(0, ${height - padding})`}\n            ref={this.xAxisContainer}\n          />\n          <g\n            className=\"y-axis axis\"\n            transform={`translate(${padding}, 0)`}\n            ref={this.yAxisContainer}\n          />\n          <text\n            className=\"x-axis-label\"\n            transform={`translate(${width / 2}, ${height - padding / 3})`}\n            style={{ textAnchor: 'middle' }}\n          >\n            {xAxisLabel}\n          </text>\n          <text\n            className=\"y-axis-label\"\n            transform={`translate(${padding / 3}, ${height / 2}) rotate(-90)`}\n            style={{ textAnchor: 'middle' }}\n          >\n            {yAxisLabel}\n          </text>\n        </svg>\n      </div>\n    );\n  }\n}\n\nHistogram.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  padding: PropTypes.number,\n  xAxisLabel: PropTypes.string,\n  yAxisLabel: PropTypes.string,\n  data: PropTypes.any,\n  valueAccessor: PropTypes.string,\n};\n\nexport default Histogram;\n","import React, { Component } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Link, HashRouter as Router } from 'react-router-dom';\nimport ScatterPlot from './components/scatter-plot';\nimport Histogram from './components/histogram';\nimport stars from './assets/static-data/stars.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <header className=\"header-primary\">\n          <h1>Stellar Graphs</h1>\n          <nav className=\"nav-primary\">\n            <ul>\n              <li>\n                <Link to=\"/\">H-R Diagram</Link>\n              </li>\n              <li>\n                <Link to=\"/temperature\">Temperature Histogram</Link>\n              </li>\n              <li>\n                <Link to=\"/luminosity\">Luminosity Histogram</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <main>\n          <Route\n            exact\n            path=\"/\"\n            render={routeProps => (\n              <ScatterPlot\n                {...routeProps}\n                width={window.innerWidth}\n                height={window.innerHeight - 100}\n                padding={80}\n                data={stars}\n                xValueAccessor=\"teff\"\n                yValueAccessor=\"luminosity\"\n                xAxisLabel=\"Temperature (K)\"\n                yAxisLabel=\"Luminosity\"\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/temperature\"\n            render={routeProps => (\n              <Histogram\n                {...routeProps}\n                width={window.innerWidth}\n                height={window.innerHeight - 100}\n                padding={80}\n                data={stars}\n                valueAccessor=\"teff\"\n                xAxisLabel=\"Temperature (K)\"\n                yAxisLabel=\"Count\"\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/luminosity\"\n            render={routeProps => (\n              <Histogram\n                {...routeProps}\n                width={window.innerWidth}\n                height={window.innerHeight - 100}\n                padding={80}\n                data={stars}\n                valueAccessor=\"luminosity\"\n                xAxisLabel=\"Luminosity\"\n                yAxisLabel=\"Count\"\n              />\n            )}\n          />\n        </main>\n      </Router>\n    );\n  }\n}\n\nexport default hot(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './assets/stylesheets/styles.scss';\n\nif (process.env.NODE_ENV !== 'production') {\n  const Axe = require('react-axe'); // eslint-disable-line global-require\n  Axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}